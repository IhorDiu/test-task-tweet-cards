{"version":3,"file":"static/js/247.00ff8f6b.chunk.js","mappings":"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","sources":["services/toast.js","services/api.js","hooks/useLocalStorage.js","components/UserCard/UserCard.styled.jsx","components/UserCard/UserCard.jsx","hooks/useToggleFollowers.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","services/statusFilters.js","components/DropDown/Dropdown.styled.jsx","components/DropDown/Dropdown.jsx","components/UsersList/UsersList.styled.jsx","components/UsersList/UsersList.jsx","components/App/App.styled.jsx","pages/Tweets.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSetup = {\n  position: 'top-center',\n  autoClose: 1000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\n// export const toastErrorMessage = () => {\n//   return toast.error('Images not found ...', toastSetup);\n// };\n\n// export const toastWarningMessage = () => {\n//   return toast.warning('Enter your request', toastSetup);\n// };\n\nexport const toastInfoMessage = message => {\n  return toast.info(message, toastSetup);\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6446ab580431e885f018cc7c.mockapi.io';\n\nexport async function fetchUsers(page) {\n  const response = await axios.get('/users', {\n    params: {\n      page: page,\n      limit: 3,\n    },\n  });\n  return response.data;\n}\n\nexport async function updateFollowers(id, followers) {\n  await axios.put(`/users/${id}`, { followers });\n}\n","import { useState, useEffect } from \"react\";\n\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [state, setState] = useState(() => {\n      return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n    });\n  \n    useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n  \n  \n    return [state, setState]\n  };\n\n","import styled from '@emotion/styled';\nimport avatarDef from 'img/Hansel.png';\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 380px;\n  height: 460px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Logo = styled.img`\n  width: 76px;\n  height: 22px;\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  // background: rgba(255, 255, 255, 0.3);\n`;\n\nexport const BgImg = styled.img`\n  width: 308px;\n  height: 168px;\n  position: absolute;\n  top: 28px;\n  left: 36px;\n`;\nexport const Rectangle = styled.div`\n  position: absolute;\n  top: 214px;\n  height: 8px;\n  width: 380px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Ellipse = styled.div`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  left: 150px;\n  top: 178px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50px;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  width: 62px;\n  height: 62px;\n  left: 9.48px;\n  top: 9.42px;\n  background: #5736a3;\n  border-radius: 50px;\n  background-image: url(${avatarDef});\n`;\nexport const Tweets = styled.p`\n  position: absolute;\n  width: 208px;\n  height: 24px;\n\n  top: 284px;\n  margin: 0 0 16px 0;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: #ebd8ff;\n`;\n\nexport const Followers = styled.p`\n  position: absolute;\n  width: 208px;\n  height: 24px;\n\n  top: 324px;\n  margin: 0 0 26px 0;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: #ebd8ff;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  margin: 0 0 26px 0;\n\n  position: absolute;\n  width: 196px;\n  height: 50px;\n  left: 92px;\n  top: 374px;\n\n  // background: #EBD8FF;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n\n  text-transform: uppercase;\n  cursor: pointer;\n\n  color: #373737;\n`;\n","import { useToggleFollowers } from 'hooks/useToggleFollowers';\nimport logo from 'img/Logo.png';\nimport bg_img from 'img/bg_img.png';\n\nimport {\n  Card,\n  Logo,\n  BgImg,\n  Rectangle,\n  Ellipse,\n  Avatar,\n  Tweets,\n  Followers,\n  Button,\n} from './UserCard.styled';\n\nexport const UserCard = ({ userCard, isFollower, followersList }) => {\n  const { user, avatar, tweets, followers } = userCard;\n\n  const isFollowing = followersList.some(({ id }) => id === userCard.id);\n  const { btnLabel, getBgColor, toggle, counterFollowers } =\n    useToggleFollowers(isFollowing);\n\n  const handleFollower = () => {\n    isFollower(userCard);\n    toggle();\n  };\n\n  return (\n    <Card>\n      <Logo src={logo} alt=\"Logo\" />\n      <BgImg src={bg_img} alt=\"Background\" />\n      <Rectangle />\n      <Ellipse>\n        <Avatar src={avatar} alt={user} />\n      </Ellipse>\n      <Tweets>{tweets.toLocaleString('en-US')} tweets</Tweets>\n      <Followers>{counterFollowers(followers)} followers</Followers>\n      <Button\n        type=\"button\"\n        onClick={handleFollower}\n        style={{ background: getBgColor() }}\n      >\n        {btnLabel()}\n      </Button>\n    </Card>\n  );\n};\n","import { useState } from 'react';\n\nexport const useToggleFollowers = (initialState) => {\n  const [isFollowing, setIsFollowing] = useState(initialState);\n  const toggle = () => setIsFollowing(isFollowing => !isFollowing);\n  const btnLabel = () => (isFollowing ? 'Following' : 'Follow');\n  const getBgColor = () => (isFollowing ? '#5CD3A8' : '#EBD8FF');\n  const counterFollowers = number =>\n    isFollowing\n      ? (number + 1).toLocaleString('en-US')\n      : number.toLocaleString('en-US');\n\n  return { isFollowing, toggle, btnLabel, getBgColor, counterFollowers };\n};\n\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  margin: 0 auto;\n  width: 120px;\n  height: 30px;\n  padding: auto;\n  border-radius: 25px;\n  background-color: #EBD8FF;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #373737;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: #5CD3A8;\n  }\n`;\n","import { LoadMoreBtn } from './Button.styled';\n\nexport const Button = ({ loadMore }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={loadMore}>\n      Load More\n    </LoadMoreBtn>\n  );\n};\n\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style= {{textAlign: \"center\"}}>\n      <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n};\n","export const statusFilters = [\n        { value: 'show all', label: 'Show all' },\n        { value: 'follow', label: 'Follow' },\n        { value: 'following', label: 'Following' },\n      ];\n\n","import styled from 'styled-components';\n\nexport const Select = styled.select`\nappearance: none;\n-moz-appearance: none;\n-webkit-appearance: none;\ncursor: pointer;\noutline: none;\npadding: 6px 30px 6px 15px;\n\nfont-family: inherit;\nfont-size: 18px;\nfont-weight: 600;\ncolor: black;\nbackground-color: #5CD3A8;\nborder-radius: 6px;\nborder-color: transparent;\n\n`;\n\n","import React from 'react';\nimport {statusFilters} from 'services/statusFilters'\n\nimport { Select } from './Dropdown.styled';\n\nexport const Dropdown = ({ filter, onFilterChange }) => {\n  \n  const handleChange = event => {\n    onFilterChange(event.target.value)\n  };\n\n  return (\n    <div>\n      <Select value={filter} onChange={handleChange}>\n        {statusFilters.map(filter => (\n          <option key={filter.value} value={filter.value}>\n            {filter.label}\n          </option>\n        ))}\n      </Select>\n    </div>\n  );\n  \n};\n\n\n","import styled from \"styled-components\";\n\n\nexport const Container = styled.ul`\nlist-style: none;\npadding: 0;\ndisplay: flex;\ngap: 30px;\nflex-wrap: wrap;\njustify-content: center;\nmargin-left: -8px;\nmargin-right: -8px;\nmargin-bottom: 20 px;\nmargin-top: 0;\n`;\n\nexport const AppBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 16px;\n    padding-bottom: 24px;\n    \n  `;\n\n\n\n\nexport const Wrapper = styled.div`\nwidth: 100px;\nmargin-left: auto;\nmargin-right: auto;\nmargin-bottom: 20px;\n    \n  }\n`;\n\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport { toastInfoMessage } from 'services/toast';\nimport {\n  fetchUsers,\n  // updateFollowers\n} from 'services/api';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n\nimport { UserCard } from 'components/UserCard/UserCard';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { Dropdown } from 'components/DropDown/Dropdown';\n\nimport { Container, AppBox, Wrapper } from './UsersList.styled';\n\nconst UsersList = () => {\n  const [userList, setUserList] = useState([]);\n  const [isVisible, setIsVisible] = useState(true);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [followersList, setFollowersList] = useLocalStorage('Followers', []);\n  const [statusFilter, setStatusFilter] = useState('all');\n\n  useEffect(() => {\n    if (page === 0) return setPage(page + 1);\n    const getUserList = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchUsers(page);\n\n        if (data.length === 0) {\n          toastInfoMessage('All users have been loaded!');\n          return setIsVisible(false);\n        }\n\n        setUserList(prevUserList => [...prevUserList, ...data]);\n        setLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getUserList();\n  }, [page]);\n\n  useEffect(() => {\n    if (page > 1) {\n      window.scrollBy(0, window.innerHeight);\n    }\n  }, [userList, page]);\n\n  const isFollower = userCard => {\n    const isFollowing = followersList.some(({ id }) => id === userCard.id);\n    if (!isFollowing) {\n      setFollowersList(prevState => [...prevState, userCard]);\n    } else {\n      setFollowersList(followersList.filter(({ id }) => id !== userCard.id));\n    }\n    // const index = users.findIndex(({ id }) => user.id === id);\n    // users[index].followers +-= 1;\n    // const addFollowers = async ({ id, followers }) {\n    //   try {\n    //     await updateFollowers(id, followers);\n    //   } catch (error) {\n    //     console.log(error.message);\n    //   }\n    // }\n\n    //   addFollowers(userCard);\n  };\n\n  //\n\n  const loadMoreBtn = () => {\n    setPage(state => state + 1);\n  };\n\n  const handleFilter = filter => {\n    setStatusFilter(filter);\n  };\n\n \n\n  const getVisibleTasks = () => {\n    const followingsId = followersList.map(({ id }) => id);\n\n    switch (statusFilter) {\n      case 'follow':\n        return userList.filter(({ id }) => !followingsId.includes(id));\n\n      case 'following':\n        return userList.filter(({ id }) => followingsId.includes(id));\n\n      default:\n        return userList;\n    }\n  };\n\n  return (\n    <AppBox>\n      <Wrapper>\n        <Dropdown filter={statusFilter} onFilterChange={handleFilter} />\n      </Wrapper>\n      <Container>\n        {getVisibleTasks().map(userCard => (\n          <UserCard\n            key={userCard.id}\n            userCard={userCard}\n            isFollower={isFollower}\n            followersList={followersList}\n          />\n        ))}\n      </Container>\n\n      {isVisible && (loading ? <Loader /> : <Button loadMore={loadMoreBtn} />)}\n      <ToastContainer />\n    </AppBox>\n  );\n};\n\nexport default UsersList;\n","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\n\nexport const Section = styled.section`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 50px;\n`\nexport const LinkBack = styled(NavLink)`\ndisplay: flex;\njustify-content: center;\ntext-decoration: none;\npadding: 10px 20px;\ncolor: black;\nfont-weight: 500;\nwidth: 200px;\nbackground-color: #E6E6FA;\nborder-radius: 25px;\n\n:hover {\n    color: white;\n    background-color: #5CD3A8;}\n`;\n\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n  border-radius: 6px;\n\n  &:hover,\n  &:hover > :first-child {\n    transform: scale(1.05);\n    color: var(--color-text-active);\n    background-color: var(--color-bg-dark-main);\n  }\n`;\n\nexport const Select = styled.select`\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  cursor: pointer;\n  outline: none;\n  padding: 6px 30px 6px 15px;\n\n  font-family: inherit;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--color-text-dark);\n  background-color: var(--color-bg-light-main);\n  border-radius: 6px;\n  border-color: transparent;\n  box-shadow: var(--box-shadow);\n\n  transition: var(--transition);\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport UsersList from 'components/UsersList/UsersList';\nimport { Section, LinkBack } from 'components/App/App.styled';\n\nexport const Tweets = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/Home');\n\n  return (\n    <>\n      <LinkBack to={backLinkLocationRef.current}> 🔙 Back to Homepage</LinkBack>\n      <Section>\n        <UsersList />\n      </Section>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["toastSetup","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetchUsers","page","axios","params","limit","response","data","Card","styled","Logo","BgImg","Rectangle","Ellipse","Avatar","Tweets","Followers","Button","UserCard","userCard","isFollower","followersList","user","avatar","tweets","followers","initialState","useState","isFollowing","setIsFollowing","toggle","btnLabel","getBgColor","counterFollowers","number","toLocaleString","useToggleFollowers","some","id","src","alt","bg_img","type","onClick","style","background","LoadMoreBtn","loadMore","Loader","textAlign","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","statusFilters","value","label","Select","Dropdown","filter","onFilterChange","onChange","event","target","map","Container","AppBox","Wrapper","userList","setUserList","isVisible","setIsVisible","setPage","loading","setLoading","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setFollowersList","statusFilter","setStatusFilter","getUserList","length","message","toast","prevUserList","console","log","scrollBy","innerHeight","prevState","followingsId","includes","getVisibleTasks","Section","LinkBack","NavLink","location","useLocation","backLinkLocationRef","useRef","from","to","current"],"sourceRoot":""}